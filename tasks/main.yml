---
# tasks file for autofs
- name: include assert.yml
  include_tasks: assert.yml

- name: install requirements for autofs
  package:
    name: "{{ autofs_requirements }}"
    state: present

- name: install autofs
  package:
    name: "{{ autofs_packages }}"
    state: present

- name: ensure /etc/auto.master.d exists.
  file:
    path: /etc/auto.master.d
    state: directory
    mode: "0755"

- name: enable /etc/auto.master.d/*.autofs inclusions
  lineinfile:
    path: /etc/auto.master
    line: '+dir:/etc/auto.master.d'
  notify:
    - restart autofs

- name: place the nis_master_map line in /etc/auto.master
  lineinfile:
    path: /etc/auto.master
    line: "+{{ nis_master_map }}"
  notify:
    - restart autofs
  when:
    nis_master_map is defined

- name: place autofs in /etc/auto.master.d/
  template:
    src: template.autofs.j2
    dest: /etc/auto.master.d/00-{{ item.mountpoint | regex_replace('/', '') }}.autofs
    mode: "0640"
  loop: "{{ autofs_maps }}"
  loop_control:
    label: /etc/auto.master.d/00-{{ item.mountpoint | regex_replace('/', '') }}.autofs
  notify:
    - reload autofs
  when:
    - autofs_maps is defined
    - item.state is not defined or (item.state is defined and item.state == "present")

- name: configure map
  template:
    src: map.j2
    dest: /etc/auto.{{ item.mountpoint | regex_replace('/', '') }}
    mode: "0644"
  loop: "{{ autofs_maps }}"
  loop_control:
    label: "{{ item.mountpoint }}"
  when:
    - autofs_maps is defined
    - item.state is not defined or (item.state is defined and item.state == "present")

- name: cleanup autofs file that should not exist
  file:
    path: /etc/auto.master.d/{{ item.mountpoint | regex_replace('/', '') }}.autofs
    state: absent
  loop: "{{ autofs_maps }}"
  loop_control:
    label: /etc/auto.master.d/{{ item.mountpoint | regex_replace('/', '') }}.autofs
  notify:
    - reload autofs
  when:
    - autofs_maps is defined
    - item.state is defined
    - item.state == "absent"

- name: cleanup maps that should not exist
  file:
    path: /etc/auto.{{ item.mountpoint | regex_replace('/', '') }}
    state: absent
  loop: "{{ autofs_maps }}"
  loop_control:
    label: "/etc/auto.{{ item.mountpoint | regex_replace('/', '') }}"
  when:
    - autofs_maps is defined
    - item.state is defined
    - item.state == "absent"

- name: create mountpoints
  file:
    path: "{{ item.mountpoint }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  loop: "{{ autofs_maps }}"
  loop_control:
    label: "{{ item.mountpoint }}"
  when:
    - autofs_maps is defined
    - item.state is not defined or (item.state is defined and item.state == "present")

- name: start autofs
  service:
    name: "{{ autofs_service }}"
    state: started
    enabled: yes
